<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name></display-name>
    <!--   跨域请求用的代码 -->
    <!--   <filter> -->
    <!--     <filter-name>CORS</filter-name> -->
    <!--     <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class> -->
    <!--     <init-param> -->
    <!--       <param-name>cors.allowOrigin</param-name> -->
    <!--       <param-value>*</param-value> -->
    <!--     </init-param> -->
    <!--     <init-param> -->
    <!--       <param-name>cors.supportedMethods</param-name> -->
    <!--       <param-value>GET,POST,HEAD,PUT,DELETE</param-value> -->
    <!--     </init-param> -->
    <!--     <init-param> -->
    <!--       <param-name>cors.supportedHeaders</param-name> -->
    <!--       <param-value>Accept,Origin,X-Requested-With,Content-Type,Last-Modified</param-value> -->
    <!--     </init-param> -->
    <!--     <init-param> -->
    <!--       <param-name>cors.exposedHeaders</param-name> -->
    <!--       <param-value>Set-Cookie</param-value> -->
    <!--     </init-param> -->
    <!--     <init-param> -->
    <!--       <param-name>cors.supportsCredentials</param-name> -->
    <!--       <param-value>true</param-value> -->
    <!--     </init-param> -->
    <!--   </filter> -->
    <!--   <filter-mapping> -->
    <!--     <filter-name>CORS</filter-name> -->
    <!--     <url-pattern>/*</url-pattern> -->
    <!--   </filter-mapping> -->

    <!--实现在tomcat启动时执行某段代码-->
    <!--<listener>-->
        <!--<listener-class>control.InitListener</listener-class>-->
        <!--<listener-class>control.HQAction</listener-class>-->
    <!--</listener>-->
    <!--表示使用的是struts2-->
    <filter>
        <filter-name>struts2</filter-name>
        <!--2.5以上版本使用如下配置-->
        <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>
        <!--2.5以下版本使用如下配置-->
        <!--<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>-->
    </filter>
    <!--过滤请求-->
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>*.action</url-pattern>
        <!--使用该核心Filter来接受所有的Web请求-->
        <!--<url-pattern>/*</url-pattern>-->
    </filter-mapping>
    <!--log4j配置文件加载-->
    <!--<context-param>-->
    <!--<param-name>log4jConfigLocation</param-name>-->
        <!--<param-value>/WEB-INF/classes/log4j.properties</param-value>-->
    <!--&lt;!&ndash;<param-value>classpath:log4j.properties</param-value>&ndash;&gt;-->
    <!--</context-param>-->
    <!--&lt;!&ndash;启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化&ndash;&gt;-->
    <!--<context-param>-->
    <!--<param-name>log4jRefreshInterval</param-name>-->
    <!--<param-value>1800000</param-value>-->
    <!--</context-param>-->
    <!--欢迎页-->
    <welcome-file-list>
        <welcome-file>login.html</welcome-file>
    </welcome-file-list>
    <!--当系统发生500、404等错误时的页面-->
    <error-page>
        <error-code>500</error-code>
        <location>/error.html</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error.html</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.NullPointerException</exception-type>
        <location>/error.html</location>
    </error-page>
</web-app>
